{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && (auth.uid == $uid || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".write": "auth != null && (auth.uid == $uid || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".validate": "newData.hasChildren(['name', 'email', 'role'])",
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 255"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)"
        },
        "role": {
          ".validate": "newData.isString() && (newData.val() == 'super_admin' || newData.val() == 'landlord' || newData.val() == 'tenant')"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() == 'pending' || newData.val() == 'approved' || newData.val() == 'rejected' || newData.val() == 'active')"
        },
        "phone": {
          ".validate": "newData.isString() && newData.val().length <= 20"
        },
        "address": {
          ".validate": "newData.isString() && newData.val().length <= 500"
        },
        "business_info": {
          ".validate": "newData.isString() && newData.val().length <= 1000"
        }
      }
    },
    "landlords": {
      "$landlord_id": {
        ".read": "auth != null && (auth.uid == $landlord_id || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".write": "auth != null && (auth.uid == $landlord_id || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".validate": "newData.hasChildren(['name', 'email', 'role']) && newData.child('role').val() == 'landlord'"
      }
    },
    "super_admins": {
      "$admin_id": {
        ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'",
        ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'",
        ".validate": "newData.hasChildren(['name', 'email', 'role']) && newData.child('role').val() == 'super_admin'"
      }
    },
    "tenants": {
      "$tenant_id": {
        ".read": "auth != null && (auth.uid == $tenant_id || root.child('users').child(auth.uid).child('role').val() == 'super_admin' || root.child('users').child(auth.uid).child('role').val() == 'landlord')",
        ".write": "auth != null && (auth.uid == $tenant_id || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".validate": "newData.hasChildren(['name', 'email', 'role']) && newData.child('role').val() == 'tenant'"
      }
    },
    "apartments": {
      "$apartment_id": {
        ".read": "auth != null && (root.child('apartments').child($apartment_id).child('landlord_id').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".write": "auth != null && (root.child('apartments').child($apartment_id).child('landlord_id').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".validate": "newData.hasChildren(['name', 'landlord_id'])",
        "landlord_id": {
          ".validate": "newData.isString() && (newData.val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'super_admin')"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 255"
        },
        "total_units": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "address": {
          ".validate": "newData.isString() && newData.val().length <= 500"
        },
        "contact_person": {
          ".validate": "newData.isString() && newData.val().length <= 255"
        },
        "contact_phone": {
          ".validate": "newData.isString() && newData.val().length <= 20"
        },
        "contact_email": {
          ".validate": "newData.isString() && newData.val().matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() == 'active' || newData.val() == 'inactive' || newData.val() == 'under_maintenance')"
        },
        "amenities": {
          ".validate": "newData.isString()"
        }
      }
    },
    "units": {
      "$unit_id": {
        ".read": "auth != null && (root.child('apartments').child(root.child('units').child($unit_id).child('apartment_id').val()).child('landlord_id').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".write": "auth != null && (root.child('apartments').child(root.child('units').child($unit_id).child('apartment_id').val()).child('landlord_id').val() == auth.uid || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".validate": "newData.hasChildren(['apartment_id', 'unit_number'])",
        "apartment_id": {
          ".validate": "newData.isString() && root.child('apartments').child(newData.val()).exists()"
        },
        "unit_number": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 10"
        },
        "unit_type": {
          ".validate": "newData.isString() && (newData.val() == 'studio' || newData.val() == '1br' || newData.val() == '2br' || newData.val() == '3br' || newData.val() == '4br+' || newData.val() == 'penthouse')"
        },
        "bedrooms": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 10"
        },
        "bathrooms": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 10"
        },
        "floor_number": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 100"
        },
        "max_occupants": {
          ".validate": "newData.isNumber() && newData.val() >= 1 && newData.val() <= 20"
        },
        "monthly_rent": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "floor_area": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() == 'available' || newData.val() == 'occupied' || newData.val() == 'maintenance')"
        },
        "amenities": {
          ".validate": "newData.isString()"
        }
      }
    },
    "test": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
    },
    "$other": {
      ".read": false,
      ".write": false
    }
  }
} 